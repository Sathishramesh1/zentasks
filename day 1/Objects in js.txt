 Objects And Its Internal Representation In JavaScript

* Objects, in JavaScript, is it’s most important data-type and 
forms the building blocks for modern JavaScript. These objects 
are quite different from JavaScript’s primitive data-types
(Number, String, Boolean, null, undefined and symbol) in the 
sense that while these primitive data-types all store a single 
value each (depending on their types).

* objects in JavaScript may be defined as an unordered collection 
of related data, of primitive or reference types, in the form of 
“key: value” pairs. These keys can be variables or functions and 
are called properties and methods, respectively

* An object can be created with figure brackets {…} with an 
optional list of properties. A property is a “key: value” pair, 
where a key is a string (also called a “property name”), and value
can be anything.

To understand this rather abstract definition, 
let us look at an example of a JavaScript Object :

Example:
let school = {
 name : “Vivekananda School”,
location : “Delhi”,
 established : “1971”    }
In the above example “name”, “location”, “established” are 
all “keys” and values.and "Vivekananda School”, “Delhi” and 1971
 are values of these keys respectively.
 
* Each of these keys is referred to as properties of the object. 
  An object in JavaScript may also have a function as a member, 
  in which case it will be known as a method of that object.

Add properties to an object
Properties can be declared with two possible notations:

1.the dot notation, .property
2.using square brackets, ["property"]

Access property value
1.To access object properties both the dot notation and the square
 brackets can be used.
2.If the property is a method, its value can be access only using 
  the dot notation with the parenthesis.
3.If you need to make sure if an object has a property or not, 
use the hasOwnProperty() method to check if it exists.

Update property value
1.To update the value of a specific property of an object, access 
the property first then just use = to assign it the new value.

Delete property
1.To remove a property from an object, use the JavaScript delete 
operator.